#ifndef G_THREAD_H
#define G_THREAD_H
#include "gaudio.h"
#include "gmain.h"
#ifdef WIN32
    #include <windows.h>
#else
    #include <pthread.h>
#endif

void*  gstartthread(uint32_t(*func)(void*),void* ptr);
uint32_t  gstopthread(void* thread);

class gmutex
{
public:
    gmutex();
    ~gmutex();
    void lock();
    void unlock();
private:
#ifdef _WIN32
    CRITICAL_SECTION section;
#else
    pthread_mutex_t section;
#endif
};

class gscoperlocker
{
public:
    gscoperlocker(gmutex* m):mutex(m)
    {
        mutex->lock();
    }
    ~gscoperlocker()
    {
        mutex->unlock();
    }
private:
    gscoperlocker();
    gscoperlocker(const gscoperlocker&);
    gmutex* mutex;
};


#endif
//! by duwenhua2013
