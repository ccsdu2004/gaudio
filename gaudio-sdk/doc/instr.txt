GAudio - Geek Audio Library SDK

GAudio is a cross platform sound library for c, c++ and C#.

GAudio is a powerfull, corss platform, extendable API for playing back sound like multimedia applications and games. GAudio is free for non commercial use. There is also an advanced version of GAudio named <link>GAudio pro</link> which can be purchased for a small license
fee and may be used in commercial products.

Supported File Formats
GAudio currently plays back the following file formats:
> Sun Microsystems' AU Format(*.au)
> Audio Interchange Format - AIFF(*.aif/*.aiff)
> RIFF WAVE(*.wav)
> MPEG-1 Audio Layer3(*.mp3)
> Fast Tracker2(*.xm)
> Advanced module format(*.s3m)
> Impulse Tracker(*.it)
> Amiga Modules(*.mod)
> Musepack(*.mpc)
> True Audio(*.tta)
> Free Lossless Audio Codec(*.flac)
> Musical Instrument Digital Interface(*.mid/*.mid)
> Ogg Vorbis(*.ogg)
> Creative Voice files(*.voc)

In addition,it is easily possible to extend the playback file formats using addons.
If you need GAudio to playback a file format it doesn't support yet, just contact us 
and we can add it for you.

1.MP3 playback is done via a plugin which comes along with irrKlang (and its full source code) so that it is easily possible to remove mp3 support if wished. If you are using mp3 playback in your application, you might need to purchase an mp3 license from Thompson Multimedia as most software using mp3s has to, although there are special prices and conditions for games. 
2.Both voc and flac playbacking needs libsndfile addons.
3.Midi music playback needs loading soundfont.

-------------------------------------------------------------------------
Supported Out File Formats
GAudio currently can output the following file formats:
> Sun Microsystems' AU Format(*.au)
> Audio Interchange Format - AIFF(*.aif/*.aiff)
> RIFF WAVE(*.wav)
> MPEG-1 Audio Layer2(*.mp2)
> MPEG-2 Audio Layer3(*.mp3)
> Advanced Audio Coding(*.aac)
> Ogg Vorbis(*.ogg)
> Creative Voice files(*.voc)
> Free Lossless Audio Codec(*.flac)
> Wavpck(*.wv)

---------------------------------------------------------------------------
Supported Platforms
GAudio is corss platform and works for the programmer the same, independent of the platform it is running on. The following platforms are currently supported together with the corresponding sound output backends: 
    > Windows 98, ME, NT 4, 2000, XP, Vista, Windows 7, Windows 8
        WinMM
        Portaudio 
    > Linux / *nix (testing at persent)
        ALSA
        OSS
        Portaudio

The sound library works with all supported platforms the in the same way, the programmer only has to write his game/application code once, and it will run on all supported platforms without the need of changing one single line of code. 

----------------------------------------------------
Supported Compilers and Languages

GAudio currently supports the following compilers/IDE (compatible compilers as well, of course):
    Microsoft Visual C/C++ 6.0 - 2012
    GCC 3-4
    Dev c++
    Code::blocks
    C#

If you want to use GAudio with a compiler not on this list, just contact us and tell us about it.
----------------------------------------------------
Sound Effects

Geek Audio currently supports the following sound effects:
    Fade In
    Fade Out
    Data Invert
    Channel Merge
    Channel Swap
    Bassboost
    Echo
    Modulator
    Speed Changer
    Cross Feed
    Autowah
    Phaser
    FFT
    Distortion
    Foldback Distortion
    
It is possible to disable and enable these effects during playback for every single sound and global context, and to adjust parameters of the effects easily also if it is already active. And all of effects is independent on OS.     

------------------------------------------------------------------------
Simple API

GAudio has an extremely simple API. The following two examples show how to start up the engine and play a wav file in C and in C#: 

C:
#include <stdlib.h>
#include <gaudio.h>

int main (int argc, char **argv)
{

#ifdef WIN32 
    gaudio_init("addons"); 
#else 
    gaudio_init("/usr/local/lib/gaudio/"); 
#endif
    gsource* source = gaudio_source_create_from_file(filename,FALSE);
    gaudio_source_start(source,FALSE);
    printf("\nplaying, press any key to quit.\n"); 
    getch();
    gaudio_source_stop(source); 
    gaudio_source_destroy(source); 
    gaudio_deinit();    
    return EXIT_SUCCESS;
}

C#
    [STAThread]
    static void Main(string[] args)
    {
        gaudio.GAudio.gaudio_init("addons");
        int error = gaudio.GAudio.gaudio_error_get();
        if(error != 0)
            return;

        IntPtr source = gaudio.GAudio.gaudio_source_create_from_file(filename,0);
        gaudio.GAudio.gaudio_source_start(source,1);
        Console.WriteLine("Press any key to exit!");
        Console.ReadKey(true);
        gaudio.GAudio.gaudio_source_destroy(source);
        gaudio.GAudio.gaudio_deinit();
    }

---------------------------------------

Features Summarized

It is a cross platform audio library, usable in C/C++ and C# languages and provides useful features like lots of built-in file format decoders (wav, au, aiff, ogg, mp3, mid/midi, mod, xm, it, s3m...), a sophisticated streaming engine, extendable audio reading, single and multithreading modes, 3d audio emulation for low end hardware, a plugin system, multiple rolloff models and more. All this can be accessed via an extremely simple API.

GAudio's current features are:

    Plays multiple file formats, .AIFF, .AU, .WAV, .MP3, .OGG, .MOD, .XM, .IT, .S3M...
    Buffered and streamed audio playback
    GAudio is platform independent: GAudio runs on several operating systems including Windows 95, 98, NT, 2000, XP, Vista and Linux
    Incredible simple API
    High level resource management and autodetection: The engine can do everything for you. Just tell it to play a sound file, and it will load, cache and/or stream sound data for you automaticly, depending on what is best for performance and memory usage. But if you want to specify how the engine should handle this, you can do this as well.
    Extendable: Possibility to write own file format readers/decoders to extend the engine with it.
    Sound effects such as echo, distortion, modulator and more.
    Exact seeking and position retrieval in streams and buffered sounds.
    Plugin System: Simply copy external created plugins to the place where GAudio is being used and extend its functionality with it.
    Works with multiple compilers including Microsofts VisualStudio 6.0?, VisualStudio.NET 7.0 - 2010, and with g++3.2 - 4.0, also with support for Code::Blocks and Dev c++
    Multi/Singlethreaded modes: The engine can run both multithreaded or singlethreaded in the same thread as your application, to make it possible to debug your application easier for example.
    Low level audio output manipulation: Possibility to alter any aspect of a playing sound like panning, volume and 3d position.
    Sound event call backs.
    File reading functionality can be overwritten by the user, of course, making it possible to let GAudio read from own file archives for example.
        

